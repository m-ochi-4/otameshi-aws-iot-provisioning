
AWSTemplateFormatVersion: 2010-09-09


Transform:
  - AWS::Serverless-2016-10-31
  - AWS::LanguageExtensions


Parameters:

  IoTPolicyNameProvisioned:
    Type: String
    Default: OtameshiProvisionedClaimPolicy


  IoTPolicyNameClaim:
    Type: String
    Default: OtameshiProvisioningClaimPolicy

  ClaimClientIdPrefix:
    Type: String
    Default: Claim_

  ClaimCertId:
    Type: String
    AllowedPattern: ^[a-f0-9]{64}$


  LambdaFunctionNamePreProvisioningHook:
    Type: String
    Default: otameshi-claim-pre-provisioning-hook

  TemplateName:
    Type: String
    Default: OtameshiClaimTemplate

  FleetProvisionedThingPrefix:
    Type: String
    Default: Fleet_Provisioned_


Resources:

  IoTPolicyProvisioned:
    Type: AWS::IoT::Policy
    Properties:
      PolicyName: !Ref IoTPolicyNameProvisioned
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - iot:Connect
            Resource:
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:client/${!iot:Connection.Thing.ThingName}
            Condition:
              Bool:
                iot:Connection.Thing.IsAttached: true
          -
            Effect: Allow
            Action:
              - iot:Publish
              - iot:Receive
              - iot:PublishRetain
            Resource:
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topic/*
          -
            Effect: Allow
            Action:
              - iot:Subscribe
            Resource:
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/*


  IoTPolicyClaim:
    Type: AWS::IoT::Policy
    Properties:
      PolicyName: !Ref IoTPolicyNameClaim
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - iot:Connect
            Resource:
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:client/${ClaimClientIdPrefix}*
          -
            Effect: Allow
            Action:
              - iot:Publish
            Resource:
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/certificates/create/json
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/provisioning-templates/${TemplateName}/provision/json
          -
            Effect: Allow
            Action:
              - iot:Receive
            Resource:
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/certificates/create/json/accepted
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/certificates/create/json/rejected
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/provisioning-templates/${TemplateName}/provision/json/accepted
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/provisioning-templates/${TemplateName}/provision/json/rejected
          -
            Effect: Allow
            Action:
              - iot:Subscribe
            Resource:
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/certificates/create/json/accepted
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/certificates/create/json/rejected
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/provisioning-templates/${TemplateName}/provision/json/accepted
              - !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/provisioning-templates/${TemplateName}/provision/json/rejected

  PolicyPrincipalAttachment:
    Type: AWS::IoT::PolicyPrincipalAttachment
    Properties:
      PolicyName: !Ref IoTPolicyClaim
      Principal: !Sub arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:cert/${ClaimCertId}


  LogGroupLambdaFunctionPreProvisioningHook:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${LambdaFunctionNamePreProvisioningHook}
      RetentionInDays: 365
      LogGroupClass: STANDARD

  LambdaFunctionPreProvisioningHook:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref LambdaFunctionNamePreProvisioningHook
      CodeUri: ./preprovisioning

      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Architectures:
        - arm64
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

      MemorySize: 256
      Timeout: 10

  LambdaPermissionPreProvisioningHook:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunctionPreProvisioningHook
      Principal: iot.amazonaws.com
      Action: lambda:InvokeFunction

  IAMRoleProvisioning:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - iot.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /service-role/
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSIoTThingsRegistration

  IoTProvisioningTemplate:
    Type: AWS::IoT::ProvisioningTemplate
    Properties:
      TemplateName: !Ref TemplateName
      Enabled: true
      TemplateType: FLEET_PROVISIONING
      PreProvisioningHook:
        PayloadVersion: 2020-04-01
        TargetArn: !GetAtt LambdaFunctionPreProvisioningHook.Arn
      ProvisioningRoleArn: !GetAtt IAMRoleProvisioning.Arn
      TemplateBody: !Sub |
        {
          "Parameters": {
            "SerialNumber": {
              "Type": "String"
            },
            "AWS::IoT::Certificate::Id": {
              "Type": "String"
            }
          },
          "Resources": {
            "thing": {
              "Type": "AWS::IoT::Thing",
              "OverrideSettings": {
                "AttributePayload": "MERGE",
                "ThingTypeName": "REPLACE",
                "ThingGroups": "DO_NOTHING"
              },
              "Properties": {
                "ThingName": {
                  "Fn::Join": [
                    "",
                    [
                      "${FleetProvisionedThingPrefix}",
                      {
                        "Ref": "SerialNumber"
                      }
                    ]
                  ]
                }
              }
            },
            "certificate": {
              "Type": "AWS::IoT::Certificate",
              "Properties": {
                "CertificateId": {
                  "Ref": "AWS::IoT::Certificate::Id"
                },
                "Status": "ACTIVE"
              }
            },
            "policy": {
              "Type": "AWS::IoT::Policy",
              "Properties": {
                "PolicyName": "${IoTPolicyProvisioned}"
              }
            }
          }
        }


Outputs:

  IoTPolicyNameProvisioned:
    Value: !Ref IoTPolicyProvisioned

  ClaimClientIdPrefix:
    Value: !Ref ClaimClientIdPrefix

  TemplateName:
    Value: !Ref IoTProvisioningTemplate
